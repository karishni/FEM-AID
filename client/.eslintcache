[{"D:\\github\\Discussion-Forum\\client\\src\\index.js":"1","D:\\github\\Discussion-Forum\\client\\src\\reportWebVitals.js":"2","D:\\github\\Discussion-Forum\\client\\src\\App.js":"3","D:\\github\\Discussion-Forum\\client\\src\\services\\httpService.js":"4","D:\\github\\Discussion-Forum\\client\\src\\components\\diabetes.js":"5","D:\\github\\Discussion-Forum\\client\\src\\components\\Health.js":"6","D:\\github\\Discussion-Forum\\client\\src\\components\\DiseaseDetection.js":"7","D:\\github\\Discussion-Forum\\client\\src\\components\\pcos.js":"8","D:\\github\\Discussion-Forum\\client\\src\\components\\not-found.jsx":"9","D:\\github\\Discussion-Forum\\client\\src\\components\\logout.jsx":"10","D:\\github\\Discussion-Forum\\client\\src\\components\\dashboard.jsx":"11","D:\\github\\Discussion-Forum\\client\\src\\components\\createpost.jsx":"12","D:\\github\\Discussion-Forum\\client\\src\\components\\PostPage.jsx":"13","D:\\github\\Discussion-Forum\\client\\src\\components\\register.jsx":"14","D:\\github\\Discussion-Forum\\client\\src\\components\\log.jsx":"15","D:\\github\\Discussion-Forum\\client\\src\\components\\common\\protectedRoute.jsx":"16","D:\\github\\Discussion-Forum\\client\\src\\components\\common\\jumbotron.jsx":"17","D:\\github\\Discussion-Forum\\client\\src\\components\\navbar.jsx":"18","D:\\github\\Discussion-Forum\\client\\src\\services\\postCreateService.js":"19","D:\\github\\Discussion-Forum\\client\\src\\services\\userService.js":"20","D:\\github\\Discussion-Forum\\client\\src\\services\\authService.js":"21","D:\\github\\Discussion-Forum\\client\\src\\utils\\paginate.js":"22","D:\\github\\Discussion-Forum\\client\\src\\components\\posts.jsx":"23","D:\\github\\Discussion-Forum\\client\\src\\components\\listgroup.jsx":"24","D:\\github\\Discussion-Forum\\client\\src\\components\\common\\form.jsx":"25","D:\\github\\Discussion-Forum\\client\\src\\components\\common\\pagination.jsx":"26","D:\\github\\Discussion-Forum\\client\\src\\components\\common\\input.jsx":"27","D:\\github\\Discussion-Forum\\client\\src\\components\\createReply.jsx":"28","D:\\github\\Discussion-Forum\\client\\src\\services\\replyCreateService.js":"29","D:\\github\\Discussion-Forum\\client\\src\\components\\cervical.js":"30","D:\\github\\Discussion-Forum\\client\\src\\components\\common\\Landing.js":"31"},{"size":988,"mtime":1649245044753,"results":"32","hashOfConfig":"33"},{"size":375,"mtime":1649245044754,"results":"34","hashOfConfig":"33"},{"size":3085,"mtime":1652439019318,"results":"35","hashOfConfig":"33"},{"size":618,"mtime":1649245044756,"results":"36","hashOfConfig":"33"},{"size":6887,"mtime":1652439058663,"results":"37","hashOfConfig":"33"},{"size":6796,"mtime":1652116069881,"results":"38","hashOfConfig":"33"},{"size":6437,"mtime":1652439058814,"results":"39","hashOfConfig":"33"},{"size":19371,"mtime":1652439019343,"results":"40","hashOfConfig":"33"},{"size":712,"mtime":1649245044748,"results":"41","hashOfConfig":"33"},{"size":251,"mtime":1649245044747,"results":"42","hashOfConfig":"33"},{"size":3599,"mtime":1649245044741,"results":"43","hashOfConfig":"33"},{"size":4023,"mtime":1649245044740,"results":"44","hashOfConfig":"33"},{"size":5534,"mtime":1649245044735,"results":"45","hashOfConfig":"33"},{"size":5676,"mtime":1649338013648,"results":"46","hashOfConfig":"33"},{"size":4248,"mtime":1649338118521,"results":"47","hashOfConfig":"33"},{"size":563,"mtime":1649245044739,"results":"48","hashOfConfig":"33"},{"size":401,"mtime":1649338397507,"results":"49","hashOfConfig":"33"},{"size":2491,"mtime":1652116069886,"results":"50","hashOfConfig":"33"},{"size":279,"mtime":1649245044772,"results":"51","hashOfConfig":"33"},{"size":287,"mtime":1649245044774,"results":"52","hashOfConfig":"33"},{"size":230,"mtime":1649245044755,"results":"53","hashOfConfig":"33"},{"size":199,"mtime":1649245044776,"results":"54","hashOfConfig":"33"},{"size":1067,"mtime":1649245044749,"results":"55","hashOfConfig":"33"},{"size":586,"mtime":1649245044745,"results":"56","hashOfConfig":"33"},{"size":1343,"mtime":1649245044736,"results":"57","hashOfConfig":"33"},{"size":996,"mtime":1649245044739,"results":"58","hashOfConfig":"33"},{"size":489,"mtime":1649245044737,"results":"59","hashOfConfig":"33"},{"size":1938,"mtime":1649245044740,"results":"60","hashOfConfig":"33"},{"size":238,"mtime":1649245044773,"results":"61","hashOfConfig":"33"},{"size":8424,"mtime":1652439019337,"results":"62","hashOfConfig":"33"},{"size":24448,"mtime":1652439019338,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"cegi57",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\github\\Discussion-Forum\\client\\src\\index.js",[],["134","135"],"D:\\github\\Discussion-Forum\\client\\src\\reportWebVitals.js",[],"D:\\github\\Discussion-Forum\\client\\src\\App.js",["136"],"D:\\github\\Discussion-Forum\\client\\src\\services\\httpService.js",["137"],"import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\naxios.defaults.headers.common[\"x-auth-token\"] = localStorage.getItem(\"token\");\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    toast(\"An unexpected error occured!\");\r\n  }\r\n  console.log(error);\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n};\r\n","D:\\github\\Discussion-Forum\\client\\src\\components\\diabetes.js",["138"],"D:\\github\\Discussion-Forum\\client\\src\\components\\Health.js",[],"D:\\github\\Discussion-Forum\\client\\src\\components\\DiseaseDetection.js",[],"D:\\github\\Discussion-Forum\\client\\src\\components\\pcos.js",["139"],"D:\\github\\Discussion-Forum\\client\\src\\components\\not-found.jsx",[],"D:\\github\\Discussion-Forum\\client\\src\\components\\logout.jsx",["140"],"import React, { Component } from \"react\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    localStorage.removeItem(\"token\");\r\n    window.location = \"/dashboard\";\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","D:\\github\\Discussion-Forum\\client\\src\\components\\dashboard.jsx",[],"D:\\github\\Discussion-Forum\\client\\src\\components\\createpost.jsx",[],"D:\\github\\Discussion-Forum\\client\\src\\components\\PostPage.jsx",["141","142"],"import React, { Component } from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport \"moment-timezone\";\r\nimport { PersonCircle, HandThumbsUpFill } from \"react-bootstrap-icons\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport http from \"../services/httpService\";\r\nimport { postEndPoint, repliesEndPoint } from \"../config.json\";\r\nimport PostReply from \"./createReply\";\r\n\r\nclass PostPage extends Component {\r\n  state = {\r\n    post: {\r\n      description: \"\",\r\n      title: \"\",\r\n      tags: [],\r\n      author: [],\r\n      upvotes: [],\r\n      views: 0,\r\n    },\r\n    replies: [],\r\n  };\r\n  async componentDidMount() {\r\n    const id = this.props.match.params.id;\r\n    const { data: post } = await http.get(postEndPoint + \"/\" + id);\r\n    const { data: replies } = await http.get(repliesEndPoint + \"/\" + id);\r\n    this.setState({ post: post, replies: replies });\r\n  }\r\n  checkLike() {\r\n    const { user } = this.props;\r\n    const { post } = this.state;\r\n    //console.log(user);\r\n    if (user && post.upvotes && post.upvotes.includes(user._id)) return true;\r\n    else return false;\r\n  }\r\n  checkReplyLike(id) {\r\n    const { replies } = this.state;\r\n    const { user } = this.props;\r\n    if (user) {\r\n      for (let i in replies) {\r\n        if (replies[i]._id === id) {\r\n          if (replies[i].upvotes.includes(user._id)) return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  handleUpvote = async () => {\r\n    try {\r\n      const { data: post } = await http.put(\r\n        postEndPoint + \"like/\" + this.props.match.params.id,\r\n        {}\r\n      );\r\n      console.log(post);\r\n      this.setState({ post: post[0] });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        toast.error(\"You can't upvote your own post!\");\r\n      }\r\n    }\r\n  };\r\n  handleReplyUpvote = async (id) => {\r\n    try {\r\n      const replies_old = [...this.state.replies];\r\n      const reply_updated = await http.put(repliesEndPoint + \"like/\" + id, {});\r\n      const { data: replies } = await http.get(\r\n        repliesEndPoint + \"/\" + this.props.match.params.id\r\n      );\r\n      console.log(replies);\r\n      this.setState({ replies: replies });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        toast.error(\"You can't upvote your own reply!\");\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    const { post, replies } = this.state;\r\n    const { user } = this.props;\r\n    return (\r\n      <div>\r\n        <ToastContainer />\r\n        <div className=\"container col-lg-6 shadow-lg p-3 mt-5 bg-body rounded\">\r\n          <h2>{post.title}</h2>\r\n          <p className=\"mt-4\" style={{ color: \"#505050\" }}>\r\n            {post.description}\r\n          </p>\r\n          <div className=\"mt-1\">\r\n            Related Topics:\r\n            {post.tags &&\r\n              post.tags.map((tag) => (\r\n                <span className=\"badge badge-success m-1 p-2\">{tag.name}</span>\r\n              ))}\r\n            <div className=\"d-flex w-100 justify-content-between mt-3 mb-3\">\r\n              <button\r\n                disabled={!user}\r\n                className={\r\n                  this.checkLike()\r\n                    ? \"btn btn-primary\"\r\n                    : \"btn btn-outline-primary\"\r\n                }\r\n                onClick={this.handleUpvote}\r\n              >\r\n                <HandThumbsUpFill className=\"mr-2\" />\r\n                {(post.upvotes && post.upvotes.length) || 0}\r\n              </button>\r\n              <p>{post.views} Views</p>\r\n            </div>\r\n            <div\r\n              class=\"d-flex w-100 justify-content-between\"\r\n              style={{ color: \"#505050\" }}\r\n            >\r\n              <div>\r\n                <PersonCircle size={30} className=\"mr-2\" />\r\n                Posted by {(post.author && post.author.username) || 0}\r\n              </div>\r\n              <p class=\"mb-1\">\r\n                <Moment fromNow>{post.time}</Moment>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {user && <PostReply id={this.props.match.params.id} />}\r\n        <div className=\"container col-lg-6 shadow-lg p-3 mt-5 bg-body rounded\">\r\n          Showing {replies.length} replies\r\n        </div>\r\n        <div>\r\n          {replies &&\r\n            replies.map((reply) => (\r\n              <div className=\"container col-lg-6 shadow-lg p-3 mt-3 bg-body rounded\">\r\n                <div className=\"ml-4\">\r\n                  <PersonCircle size={30} className=\"mr-3\" />\r\n                  Posted by {reply.author.username}\r\n                </div>\r\n                <div className=\"m-4\">{reply.comment}</div>\r\n                <div className=\"d-flex w-100 justify-content-between mt-3 mb-3\">\r\n                  <button\r\n                    className={\r\n                      this.checkReplyLike(reply._id)\r\n                        ? \"btn btn-primary\"\r\n                        : \"btn btn-outline-primary\"\r\n                    }\r\n                    disabled={!user}\r\n                    onClick={() => {\r\n                      this.handleReplyUpvote(reply._id);\r\n                    }}\r\n                  >\r\n                    <HandThumbsUpFill className=\"mr-2\" />\r\n                    {reply.upvotes.length}\r\n                  </button>\r\n                  <p class=\"mb-1\">\r\n                    <Moment fromNow style={{ color: \"#505050\" }}>\r\n                      {reply.time}\r\n                    </Moment>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostPage;\r\n","D:\\github\\Discussion-Forum\\client\\src\\components\\register.jsx",[],"D:\\github\\Discussion-Forum\\client\\src\\components\\log.jsx",["143"],"import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Joi from \"joi-browser\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"../App.css\";\r\nimport Input from \"../components/common/input\";\r\nimport Form from \"./common/form\";\r\nimport { login } from \"../services/authService\";\r\n\r\n// use programmatic navigation form login form to dashboard\r\n\r\n// add functionality to show react toast if the user is redierected to different locations due to history\r\nclass Log extends Form {\r\n  state = {\r\n    data: { email: \"\", password: \"\" },\r\n    errors: {\r\n      email: \"\",\r\n      passowrd: \"\",\r\n    },\r\n  };\r\n  schema = {\r\n    email: Joi.string().required().label(\"Email ID\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n  doSubmit = async () => {\r\n    // call the server;\r\n    try {\r\n      const { data } = this.state;\r\n      //console.log(data.email);\r\n      const { data: jwt } = await login(data.email, data.password);\r\n      localStorage.setItem(\"token\", jwt);\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/users/login\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        toast.error(\"Invalid Email Or Password\");\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    if (localStorage.getItem(\"token\")) {\r\n      return <Redirect to=\"/dashboard\" />;\r\n    }\r\n    const { data, errors } = this.state;\r\n    return (\r\n      // <section class=\"\">\r\n        <div class=\"px-4 py-5 px-md-5 text-center text-lg-start\" style={{backgroundColor: \"hsl(0, 0%, 96%)\", height: '730px'}}>\r\n          <div class=\"container\">\r\n            <div class=\"row gx-lg-5 align-items-center\">\r\n              <div class=\"col-lg-6 mb-5 mb-lg-0\">\r\n                <h1 class=\"my-5 display-3 fw-bold ls-tight\">\r\n                  Join our community of <br />\r\n                  <span class=\"text-primary\">female <br /> healthcare</span>\r\n                </h1>\r\n                <p style={{color: \"hsl(217, 10%, 50.8%)\"}}>\r\n                  Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                  Eveniet, itaque accusantium odio, soluta, corrupti aliquam\r\n                  quibusdam tempora at cupiditate quis eum maiores libero\r\n                  veritatis? Dicta facilis sint aliquid ipsum atque?\r\n                </p>\r\n              </div>\r\n\r\n              <div class=\"col-lg-6 mb-5 mb-lg-0\">\r\n                <div class=\"card\">\r\n                  <div class=\"card-body py-5 px-md-5\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                      \r\n                      <div class=\"form-outline mb-4\">\r\n                        <Input id=\"form3Example1\" class=\"form-control\"\r\n                          name=\"email\"\r\n                          value={data.email}\r\n                          label=\"Email ID\"\r\n                          onChange={this.handleChange}\r\n                          error={errors.email} />\r\n                      </div>\r\n\r\n                      <div class=\"form-outline mb-4\">\r\n                        <Input id=\"form3Example2\" class=\"form-control\"\r\n                        name=\"password\"\r\n                        value={data.password}\r\n                        label=\"Password\"\r\n                        onChange={this.handleChange}\r\n                        error={errors.password}\r\n                        type=\"password\"/>\r\n                      </div>\r\n\r\n                      <div className=\"text-center\">\r\n                        <button\r\n                          className=\"btn btn-primary m-3\"\r\n                          disabled={this.validate()}\r\n                        >\r\n                        Login\r\n                        </button>\r\n                      </div>\r\n\r\n                    </form>\r\n                  \r\n                  <div className=\"container col-lg-3 col-md-6 border rounder mt-1 p-3 text-center\" style={{maxWidth: '100%'}}>\r\n                    New User? <Link to=\"/users/register\">Register Here</Link>\r\n                  </div>\r\n                    \r\n                </div>\r\n               </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      //</section>    \r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Log;\r\n","D:\\github\\Discussion-Forum\\client\\src\\components\\common\\protectedRoute.jsx",[],"D:\\github\\Discussion-Forum\\client\\src\\components\\common\\jumbotron.jsx",[],"D:\\github\\Discussion-Forum\\client\\src\\components\\navbar.jsx",[],"D:\\github\\Discussion-Forum\\client\\src\\services\\postCreateService.js",[],"D:\\github\\Discussion-Forum\\client\\src\\services\\userService.js",[],"D:\\github\\Discussion-Forum\\client\\src\\services\\authService.js",[],"D:\\github\\Discussion-Forum\\client\\src\\utils\\paginate.js",[],"D:\\github\\Discussion-Forum\\client\\src\\components\\posts.jsx",[],"D:\\github\\Discussion-Forum\\client\\src\\components\\listgroup.jsx",[],"D:\\github\\Discussion-Forum\\client\\src\\components\\common\\form.jsx",[],"D:\\github\\Discussion-Forum\\client\\src\\components\\common\\pagination.jsx",["144"],"import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = (props) => {\r\n  const { itemCount, pageSize, currentPage, onPageChange } = props;\r\n  const pagesCount = Math.ceil(itemCount / pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n  return (\r\n    <div className=\"text-center\">\r\n      <ul className=\"pagination m-4\">\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemCount: propTypes.number.isRequired,\r\n  pageSize: propTypes.number.isRequired,\r\n  currentPage: propTypes.number.isRequired,\r\n  onPageChange: propTypes.func.isRequired,\r\n};\r\nexport default Pagination;\r\n","D:\\github\\Discussion-Forum\\client\\src\\components\\common\\input.jsx",[],"D:\\github\\Discussion-Forum\\client\\src\\components\\createReply.jsx",["145","146","147","148","149"],"import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport { Toast, ToastContainer } from \"react-toastify\";\r\nimport Form from \"./common/form\";\r\nimport { createreply } from \"../services/replyCreateService\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass PostReply extends Form {\r\n  state = {\r\n    data: {\r\n      comment: \"\",\r\n    },\r\n    errors: { comment: \"\" },\r\n  };\r\n  schema = {\r\n    comment: Joi.string().required().min(5).label(\"Comment\"),\r\n  };\r\n  doSubmit = async () => {\r\n    try {\r\n      const { data } = this.state;\r\n      const { data: reply } = await createreply(data, this.props.id);\r\n      window.location = `/post/${this.props.id}`;\r\n    } catch (ex) {}\r\n  };\r\n  render() {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <ToastContainer />\r\n        <div className=\"container col-lg-6 shadow-lg p-3 mt-5 bg-body rounded\">\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Post Reply</label>\r\n              <textarea\r\n                className=\"border border-primary\"\r\n                style={{ height: 150 }}\r\n                value={data.comment}\r\n                onChange={this.handleChange}\r\n                name=\"comment\"\r\n                type=\"comment\"\r\n                id=\"comment\"\r\n                className=\"form-control\"\r\n              />\r\n              {errors.description && (\r\n                <div className=\"alert-info\">{errors.description}</div>\r\n              )}\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-primary mt-4\"\r\n                  disabled={this.validate()}\r\n                >\r\n                  Post Reply\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostReply;\r\n","D:\\github\\Discussion-Forum\\client\\src\\services\\replyCreateService.js",[],["150","151"],"D:\\github\\Discussion-Forum\\client\\src\\components\\cervical.js",[],"D:\\github\\Discussion-Forum\\client\\src\\components\\common\\Landing.js",["152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180"],{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":9,"column":8,"nodeType":"187","messageId":"188","endLine":9,"endColumn":16},{"ruleId":"189","severity":1,"message":"190","line":20,"column":1,"nodeType":"191","endLine":25,"endColumn":3},{"ruleId":"185","severity":1,"message":"192","line":62,"column":9,"nodeType":"187","messageId":"188","endLine":62,"endColumn":14},{"ruleId":"185","severity":1,"message":"192","line":94,"column":9,"nodeType":"187","messageId":"188","endLine":94,"endColumn":14},{"ruleId":"185","severity":1,"message":"193","line":1,"column":8,"nodeType":"187","messageId":"188","endLine":1,"endColumn":13},{"ruleId":"185","severity":1,"message":"194","line":63,"column":13,"nodeType":"187","messageId":"188","endLine":63,"endColumn":24},{"ruleId":"185","severity":1,"message":"195","line":64,"column":13,"nodeType":"187","messageId":"188","endLine":64,"endColumn":26},{"ruleId":"185","severity":1,"message":"196","line":4,"column":10,"nodeType":"187","messageId":"188","endLine":4,"endColumn":24},{"ruleId":"197","severity":1,"message":"198","line":18,"column":13,"nodeType":"199","endLine":18,"endColumn":73},{"ruleId":"185","severity":1,"message":"200","line":1,"column":17,"nodeType":"187","messageId":"188","endLine":1,"endColumn":26},{"ruleId":"185","severity":1,"message":"201","line":3,"column":10,"nodeType":"187","messageId":"188","endLine":3,"endColumn":15},{"ruleId":"185","severity":1,"message":"202","line":6,"column":10,"nodeType":"187","messageId":"188","endLine":6,"endColumn":18},{"ruleId":"185","severity":1,"message":"203","line":21,"column":21,"nodeType":"187","messageId":"188","endLine":21,"endColumn":26},{"ruleId":"204","severity":1,"message":"205","line":42,"column":17,"nodeType":"206","endLine":42,"endColumn":41},{"ruleId":"181","replacedBy":"207"},{"ruleId":"183","replacedBy":"208"},{"ruleId":"185","severity":1,"message":"209","line":2,"column":10,"nodeType":"187","messageId":"188","endLine":2,"endColumn":18},{"ruleId":"185","severity":1,"message":"210","line":10,"column":8,"nodeType":"187","messageId":"188","endLine":10,"endColumn":12},{"ruleId":"197","severity":1,"message":"211","line":23,"column":17,"nodeType":"199","endLine":23,"endColumn":56},{"ruleId":"197","severity":1,"message":"211","line":25,"column":17,"nodeType":"199","endLine":25,"endColumn":56},{"ruleId":"197","severity":1,"message":"211","line":27,"column":17,"nodeType":"199","endLine":27,"endColumn":56},{"ruleId":"197","severity":1,"message":"211","line":29,"column":17,"nodeType":"199","endLine":29,"endColumn":56},{"ruleId":"197","severity":1,"message":"211","line":31,"column":17,"nodeType":"199","endLine":31,"endColumn":56},{"ruleId":"197","severity":1,"message":"211","line":33,"column":17,"nodeType":"199","endLine":33,"endColumn":56},{"ruleId":"197","severity":1,"message":"211","line":43,"column":13,"nodeType":"199","endLine":43,"endColumn":49},{"ruleId":"212","severity":1,"message":"213","line":65,"column":15,"nodeType":"199","endLine":65,"endColumn":68},{"ruleId":"197","severity":1,"message":"211","line":70,"column":19,"nodeType":"199","endLine":70,"endColumn":79},{"ruleId":"212","severity":1,"message":"213","line":75,"column":15,"nodeType":"199","endLine":75,"endColumn":68},{"ruleId":"214","severity":1,"message":"215","line":179,"column":15,"nodeType":"199","endLine":179,"endColumn":85},{"ruleId":"197","severity":1,"message":"211","line":188,"column":15,"nodeType":"199","endLine":188,"endColumn":75},{"ruleId":"197","severity":1,"message":"211","line":204,"column":15,"nodeType":"199","endLine":204,"endColumn":75},{"ruleId":"197","severity":1,"message":"211","line":321,"column":19,"nodeType":"199","endLine":323,"endColumn":20},{"ruleId":"197","severity":1,"message":"211","line":342,"column":19,"nodeType":"199","endLine":344,"endColumn":20},{"ruleId":"197","severity":1,"message":"211","line":363,"column":19,"nodeType":"199","endLine":365,"endColumn":20},{"ruleId":"197","severity":1,"message":"211","line":388,"column":13,"nodeType":"199","endLine":388,"endColumn":24},{"ruleId":"197","severity":1,"message":"211","line":392,"column":15,"nodeType":"199","endLine":393,"endColumn":26},{"ruleId":"197","severity":1,"message":"211","line":394,"column":15,"nodeType":"199","endLine":395,"endColumn":26},{"ruleId":"197","severity":1,"message":"211","line":396,"column":15,"nodeType":"199","endLine":397,"endColumn":26},{"ruleId":"197","severity":1,"message":"211","line":398,"column":15,"nodeType":"199","endLine":399,"endColumn":26},{"ruleId":"197","severity":1,"message":"211","line":411,"column":15,"nodeType":"199","endLine":411,"endColumn":55},{"ruleId":"197","severity":1,"message":"211","line":412,"column":15,"nodeType":"199","endLine":412,"endColumn":55},{"ruleId":"197","severity":1,"message":"211","line":413,"column":15,"nodeType":"199","endLine":413,"endColumn":50},{"ruleId":"197","severity":1,"message":"211","line":424,"column":18,"nodeType":"199","endLine":424,"endColumn":72},{"ruleId":"197","severity":1,"message":"211","line":429,"column":7,"nodeType":"199","endLine":429,"endColumn":66},{"ruleId":"216","severity":1,"message":"217","line":429,"column":111,"nodeType":"218","endLine":433,"endColumn":7},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"no-unused-vars","'Jumotron' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'reset' is assigned a value but never used.","'React' is defined but never used.","'replies_old' is assigned a value but never used.","'reply_updated' is assigned a value but never used.","'ToastContainer' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Component' is defined but never used.","'Toast' is defined but never used.","'Redirect' is defined but never used.","'reply' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["219"],["220"],"'Carousel' is defined but never used.","'User' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","no-global-assign","no-unsafe-negation"]