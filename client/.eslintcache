[{"C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\index.js":"1","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\App.js":"3","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\services\\httpService.js":"4","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\log.jsx":"5","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\dashboard.jsx":"6","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\not-found.jsx":"7","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\logout.jsx":"8","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\navbar.jsx":"9","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\common\\jumbotron.jsx":"10","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\common\\protectedRoute.jsx":"11","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\PostPage.jsx":"12","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\register.jsx":"13","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\createpost.jsx":"14","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\services\\authService.js":"15","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\services\\userService.js":"16","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\services\\postCreateService.js":"17","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\utils\\paginate.js":"18","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\common\\input.jsx":"19","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\common\\form.jsx":"20","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\listgroup.jsx":"21","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\common\\pagination.jsx":"22","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\posts.jsx":"23","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\createReply.jsx":"24","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\services\\replyCreateService.js":"25","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\diabetesForm.jsx":"26"},{"size":988,"mtime":1648742020829,"results":"27","hashOfConfig":"28"},{"size":375,"mtime":1648742020872,"results":"29","hashOfConfig":"28"},{"size":2442,"mtime":1649180303430,"results":"30","hashOfConfig":"28"},{"size":618,"mtime":1648742020893,"results":"31","hashOfConfig":"28"},{"size":2627,"mtime":1648742020743,"results":"32","hashOfConfig":"28"},{"size":3599,"mtime":1648812570189,"results":"33","hashOfConfig":"28"},{"size":712,"mtime":1648742020766,"results":"34","hashOfConfig":"28"},{"size":251,"mtime":1648742020758,"results":"35","hashOfConfig":"28"},{"size":2299,"mtime":1649181647700,"results":"36","hashOfConfig":"28"},{"size":359,"mtime":1648742020446,"results":"37","hashOfConfig":"28"},{"size":563,"mtime":1648742020472,"results":"38","hashOfConfig":"28"},{"size":5534,"mtime":1648742020282,"results":"39","hashOfConfig":"28"},{"size":3228,"mtime":1648742020778,"results":"40","hashOfConfig":"28"},{"size":4023,"mtime":1648818818045,"results":"41","hashOfConfig":"28"},{"size":230,"mtime":1648742020877,"results":"42","hashOfConfig":"28"},{"size":287,"mtime":1648742021029,"results":"43","hashOfConfig":"28"},{"size":279,"mtime":1648813229144,"results":"44","hashOfConfig":"28"},{"size":199,"mtime":1648742021159,"results":"45","hashOfConfig":"28"},{"size":489,"mtime":1648742020432,"results":"46","hashOfConfig":"28"},{"size":1343,"mtime":1648742020398,"results":"47","hashOfConfig":"28"},{"size":586,"mtime":1648742020727,"results":"48","hashOfConfig":"28"},{"size":996,"mtime":1648742020459,"results":"49","hashOfConfig":"28"},{"size":1067,"mtime":1648742020775,"results":"50","hashOfConfig":"28"},{"size":1938,"mtime":1648742020490,"results":"51","hashOfConfig":"28"},{"size":238,"mtime":1648742020945,"results":"52","hashOfConfig":"28"},{"size":3460,"mtime":1648820582626,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"hgiy0z",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},"C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\index.js",[],["113","114"],"C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\App.js",[],"C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\services\\httpService.js",["115"],"import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\naxios.defaults.headers.common[\"x-auth-token\"] = localStorage.getItem(\"token\");\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    toast(\"An unexpected error occured!\");\r\n  }\r\n  console.log(error);\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n};\r\n","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\log.jsx",[],"C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\dashboard.jsx",[],"C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\not-found.jsx",[],"C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\logout.jsx",["116"],"import React, { Component } from \"react\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    localStorage.removeItem(\"token\");\r\n    window.location = \"/dashboard\";\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\navbar.jsx",[],"C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\common\\jumbotron.jsx",[],"C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\common\\protectedRoute.jsx",[],"C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\PostPage.jsx",["117","118"],"import React, { Component } from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport \"moment-timezone\";\r\nimport { PersonCircle, HandThumbsUpFill } from \"react-bootstrap-icons\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport http from \"../services/httpService\";\r\nimport { postEndPoint, repliesEndPoint } from \"../config.json\";\r\nimport PostReply from \"./createReply\";\r\n\r\nclass PostPage extends Component {\r\n  state = {\r\n    post: {\r\n      description: \"\",\r\n      title: \"\",\r\n      tags: [],\r\n      author: [],\r\n      upvotes: [],\r\n      views: 0,\r\n    },\r\n    replies: [],\r\n  };\r\n  async componentDidMount() {\r\n    const id = this.props.match.params.id;\r\n    const { data: post } = await http.get(postEndPoint + \"/\" + id);\r\n    const { data: replies } = await http.get(repliesEndPoint + \"/\" + id);\r\n    this.setState({ post: post, replies: replies });\r\n  }\r\n  checkLike() {\r\n    const { user } = this.props;\r\n    const { post } = this.state;\r\n    //console.log(user);\r\n    if (user && post.upvotes && post.upvotes.includes(user._id)) return true;\r\n    else return false;\r\n  }\r\n  checkReplyLike(id) {\r\n    const { replies } = this.state;\r\n    const { user } = this.props;\r\n    if (user) {\r\n      for (let i in replies) {\r\n        if (replies[i]._id === id) {\r\n          if (replies[i].upvotes.includes(user._id)) return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  handleUpvote = async () => {\r\n    try {\r\n      const { data: post } = await http.put(\r\n        postEndPoint + \"like/\" + this.props.match.params.id,\r\n        {}\r\n      );\r\n      console.log(post);\r\n      this.setState({ post: post[0] });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        toast.error(\"You can't upvote your own post!\");\r\n      }\r\n    }\r\n  };\r\n  handleReplyUpvote = async (id) => {\r\n    try {\r\n      const replies_old = [...this.state.replies];\r\n      const reply_updated = await http.put(repliesEndPoint + \"like/\" + id, {});\r\n      const { data: replies } = await http.get(\r\n        repliesEndPoint + \"/\" + this.props.match.params.id\r\n      );\r\n      console.log(replies);\r\n      this.setState({ replies: replies });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        toast.error(\"You can't upvote your own reply!\");\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    const { post, replies } = this.state;\r\n    const { user } = this.props;\r\n    return (\r\n      <div>\r\n        <ToastContainer />\r\n        <div className=\"container col-lg-6 shadow-lg p-3 mt-5 bg-body rounded\">\r\n          <h2>{post.title}</h2>\r\n          <p className=\"mt-4\" style={{ color: \"#505050\" }}>\r\n            {post.description}\r\n          </p>\r\n          <div className=\"mt-1\">\r\n            Related Topics:\r\n            {post.tags &&\r\n              post.tags.map((tag) => (\r\n                <span className=\"badge badge-success m-1 p-2\">{tag.name}</span>\r\n              ))}\r\n            <div className=\"d-flex w-100 justify-content-between mt-3 mb-3\">\r\n              <button\r\n                disabled={!user}\r\n                className={\r\n                  this.checkLike()\r\n                    ? \"btn btn-primary\"\r\n                    : \"btn btn-outline-primary\"\r\n                }\r\n                onClick={this.handleUpvote}\r\n              >\r\n                <HandThumbsUpFill className=\"mr-2\" />\r\n                {(post.upvotes && post.upvotes.length) || 0}\r\n              </button>\r\n              <p>{post.views} Views</p>\r\n            </div>\r\n            <div\r\n              class=\"d-flex w-100 justify-content-between\"\r\n              style={{ color: \"#505050\" }}\r\n            >\r\n              <div>\r\n                <PersonCircle size={30} className=\"mr-2\" />\r\n                Posted by {(post.author && post.author.username) || 0}\r\n              </div>\r\n              <p class=\"mb-1\">\r\n                <Moment fromNow>{post.time}</Moment>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {user && <PostReply id={this.props.match.params.id} />}\r\n        <div className=\"container col-lg-6 shadow-lg p-3 mt-5 bg-body rounded\">\r\n          Showing {replies.length} replies\r\n        </div>\r\n        <div>\r\n          {replies &&\r\n            replies.map((reply) => (\r\n              <div className=\"container col-lg-6 shadow-lg p-3 mt-3 bg-body rounded\">\r\n                <div className=\"ml-4\">\r\n                  <PersonCircle size={30} className=\"mr-3\" />\r\n                  Posted by {reply.author.username}\r\n                </div>\r\n                <div className=\"m-4\">{reply.comment}</div>\r\n                <div className=\"d-flex w-100 justify-content-between mt-3 mb-3\">\r\n                  <button\r\n                    className={\r\n                      this.checkReplyLike(reply._id)\r\n                        ? \"btn btn-primary\"\r\n                        : \"btn btn-outline-primary\"\r\n                    }\r\n                    disabled={!user}\r\n                    onClick={() => {\r\n                      this.handleReplyUpvote(reply._id);\r\n                    }}\r\n                  >\r\n                    <HandThumbsUpFill className=\"mr-2\" />\r\n                    {reply.upvotes.length}\r\n                  </button>\r\n                  <p class=\"mb-1\">\r\n                    <Moment fromNow style={{ color: \"#505050\" }}>\r\n                      {reply.time}\r\n                    </Moment>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostPage;\r\n","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\register.jsx",[],"C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\createpost.jsx",[],"C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\services\\authService.js",[],"C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\services\\userService.js",[],"C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\services\\postCreateService.js",[],"C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\utils\\paginate.js",[],"C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\common\\input.jsx",[],"C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\common\\form.jsx",[],"C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\listgroup.jsx",[],"C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\common\\pagination.jsx",["119"],"import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = (props) => {\r\n  const { itemCount, pageSize, currentPage, onPageChange } = props;\r\n  const pagesCount = Math.ceil(itemCount / pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n  return (\r\n    <div className=\"text-center\">\r\n      <ul className=\"pagination m-4\">\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemCount: propTypes.number.isRequired,\r\n  pageSize: propTypes.number.isRequired,\r\n  currentPage: propTypes.number.isRequired,\r\n  onPageChange: propTypes.func.isRequired,\r\n};\r\nexport default Pagination;\r\n","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\posts.jsx",[],"C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\createReply.jsx",["120","121","122","123","124"],"import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport { Toast, ToastContainer } from \"react-toastify\";\r\nimport Form from \"./common/form\";\r\nimport { createreply } from \"../services/replyCreateService\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass PostReply extends Form {\r\n  state = {\r\n    data: {\r\n      comment: \"\",\r\n    },\r\n    errors: { comment: \"\" },\r\n  };\r\n  schema = {\r\n    comment: Joi.string().required().min(5).label(\"Comment\"),\r\n  };\r\n  doSubmit = async () => {\r\n    try {\r\n      const { data } = this.state;\r\n      const { data: reply } = await createreply(data, this.props.id);\r\n      window.location = `/post/${this.props.id}`;\r\n    } catch (ex) {}\r\n  };\r\n  render() {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <ToastContainer />\r\n        <div className=\"container col-lg-6 shadow-lg p-3 mt-5 bg-body rounded\">\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Post Reply</label>\r\n              <textarea\r\n                className=\"border border-primary\"\r\n                style={{ height: 150 }}\r\n                value={data.comment}\r\n                onChange={this.handleChange}\r\n                name=\"comment\"\r\n                type=\"comment\"\r\n                id=\"comment\"\r\n                className=\"form-control\"\r\n              />\r\n              {errors.description && (\r\n                <div className=\"alert-info\">{errors.description}</div>\r\n              )}\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-primary mt-4\"\r\n                  disabled={this.validate()}\r\n                >\r\n                  Post Reply\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostReply;\r\n","C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\services\\replyCreateService.js",[],"C:\\Users\\Lenovo\\Desktop\\FEM-AID\\Discussion-Forum\\client\\src\\components\\diabetesForm.jsx",["125"],"import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport Input from \"./common/input\";\r\nimport Form from \"./common/form\";\r\nimport http from \"../services/httpService\";\r\nimport { tagsEndPoint } from \"../config.json\";\r\nimport { createpost } from \"../services/postCreateService\";\r\n\r\nclass DiabetesForm extends Form {\r\n  state = {\r\n    data: { Pregnancies: \"\", Glucose: \"\", BloodPressure: \"\" },\r\n    errors: { title: \"\", description: \"\", tags: [] },\r\n    tags: [],\r\n  };\r\n  schema = {\r\n    title: Joi.string().required().min(5).label(\"Title\"),\r\n    description: Joi.string().required().min(3).label(\"Description\"),\r\n    tags: Joi.array(),\r\n  };\r\n  handleTagChange = (tagID) => {\r\n    console.log(\"hello\");\r\n    let data = this.state.data;\r\n    const newtags = data.tags;\r\n    const index = newtags.indexOf(tagID);\r\n    if (index === -1) newtags.push(tagID);\r\n    else newtags.splice(index, 1);\r\n    data = {\r\n      title: data.title,\r\n      description: data.description,\r\n      tags: newtags,\r\n    };\r\n    console.log(data);\r\n    this.setState({ data });\r\n  };\r\n  async componentDidMount() {\r\n    let tags = await http.get(tagsEndPoint);\r\n    try {\r\n      this.setState({ tags: tags.data });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        toast.error(\"Post Validation Failed!\");\r\n      }\r\n    }\r\n  }\r\n  doSubmit = async () => {\r\n    try {\r\n      const { data } = this.state;\r\n      console.log(data);\r\n      const { response } = await createpost(data);\r\n      console.log(response);\r\n      window.location = \"/dashboard\";\r\n    } catch (ex) {console.log(ex)}\r\n  };\r\n  render() {\r\n    const { data, errors, tags } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <ToastContainer />\r\n        <div className=\"container-lg\">\r\n          <h1 className=\"text-center m-2\">Diabetes Prediction</h1>\r\n          <div\r\n            className=\"container m-4 p-4 rounded\"\r\n            style={{ backgroundColor: \"#F1F1F1\" }}\r\n          >\r\n            <form onSubmit={this.handleSubmit}>\r\n              <Input\r\n                value={data.Pregnancies}\r\n                onChange={this.handleChange}\r\n                label=\"Number of Pregnancies\"\r\n                name=\"pregnancies\"\r\n                type=\"text\"\r\n                error={errors.title}\r\n              />\r\n              <div className=\"form-group\">\r\n                <Input\r\n                  value={data.Glucose}\r\n                  onChange={this.handleChange}\r\n                  label=\"Glucose\"\r\n                  name=\"glucose\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                />\r\n                {errors.description && (\r\n                  <div className=\"alert-info\">{errors.description}</div>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"tags\">Related Tags</label>\r\n                <br />\r\n                {errors.tags && <div className=\"alert-info\">{errors.tags}</div>}\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-primary mt-4\"\r\n                  disabled={this.validate()}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DiabetesForm;\r\n",{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":20,"column":1,"nodeType":"132","endLine":25,"endColumn":3},{"ruleId":"133","severity":1,"message":"134","line":1,"column":8,"nodeType":"135","messageId":"136","endLine":1,"endColumn":13},{"ruleId":"133","severity":1,"message":"137","line":63,"column":13,"nodeType":"135","messageId":"136","endLine":63,"endColumn":24},{"ruleId":"133","severity":1,"message":"138","line":64,"column":13,"nodeType":"135","messageId":"136","endLine":64,"endColumn":26},{"ruleId":"139","severity":1,"message":"140","line":18,"column":13,"nodeType":"141","endLine":18,"endColumn":73},{"ruleId":"133","severity":1,"message":"142","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":26},{"ruleId":"133","severity":1,"message":"143","line":3,"column":10,"nodeType":"135","messageId":"136","endLine":3,"endColumn":15},{"ruleId":"133","severity":1,"message":"144","line":6,"column":10,"nodeType":"135","messageId":"136","endLine":6,"endColumn":18},{"ruleId":"133","severity":1,"message":"145","line":21,"column":21,"nodeType":"135","messageId":"136","endLine":21,"endColumn":26},{"ruleId":"146","severity":1,"message":"147","line":42,"column":17,"nodeType":"148","endLine":42,"endColumn":41},{"ruleId":"133","severity":1,"message":"149","line":56,"column":27,"nodeType":"135","messageId":"136","endLine":56,"endColumn":31},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'replies_old' is assigned a value but never used.","'reply_updated' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Component' is defined but never used.","'Toast' is defined but never used.","'Redirect' is defined but never used.","'reply' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'tags' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]