[{"D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\index.js":"1","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\reportWebVitals.js":"2","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\App.js":"3","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\services\\httpService.js":"4","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\diabetes.js":"5","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\createpost.jsx":"6","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\not-found.jsx":"7","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\log.jsx":"8","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\dashboard.jsx":"9","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\navbar.jsx":"10","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\register.jsx":"11","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\PostPage.jsx":"12","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\logout.jsx":"13","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\diabetesForm.jsx":"14","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\common\\protectedRoute.jsx":"15","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\common\\jumbotron.jsx":"16","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\services\\authService.js":"17","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\services\\postCreateService.js":"18","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\services\\userService.js":"19","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\utils\\paginate.js":"20","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\common\\input.jsx":"21","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\common\\form.jsx":"22","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\posts.jsx":"23","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\listgroup.jsx":"24","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\common\\pagination.jsx":"25","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\createReply.jsx":"26","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\services\\replyCreateService.js":"27","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\DiseaseDetection.js":"28"},{"size":988,"mtime":1651851771791,"results":"29","hashOfConfig":"30"},{"size":375,"mtime":1651843487418,"results":"31","hashOfConfig":"30"},{"size":2685,"mtime":1651950168296,"results":"32","hashOfConfig":"30"},{"size":618,"mtime":1651843487419,"results":"33","hashOfConfig":"30"},{"size":6906,"mtime":1652085790443,"results":"34","hashOfConfig":"30"},{"size":4023,"mtime":1651843487413,"results":"35","hashOfConfig":"30"},{"size":712,"mtime":1651843487415,"results":"36","hashOfConfig":"30"},{"size":4248,"mtime":1651843487414,"results":"37","hashOfConfig":"30"},{"size":3599,"mtime":1651843487413,"results":"38","hashOfConfig":"30"},{"size":2491,"mtime":1651949968195,"results":"39","hashOfConfig":"30"},{"size":5676,"mtime":1651843487415,"results":"40","hashOfConfig":"30"},{"size":5534,"mtime":1651843487407,"results":"41","hashOfConfig":"30"},{"size":251,"mtime":1651843487414,"results":"42","hashOfConfig":"30"},{"size":3460,"mtime":1651843487414,"results":"43","hashOfConfig":"30"},{"size":563,"mtime":1651843487412,"results":"44","hashOfConfig":"30"},{"size":401,"mtime":1651843487410,"results":"45","hashOfConfig":"30"},{"size":230,"mtime":1651843487419,"results":"46","hashOfConfig":"30"},{"size":279,"mtime":1651843487420,"results":"47","hashOfConfig":"30"},{"size":287,"mtime":1651843487421,"results":"48","hashOfConfig":"30"},{"size":199,"mtime":1651843487422,"results":"49","hashOfConfig":"30"},{"size":489,"mtime":1651843487410,"results":"50","hashOfConfig":"30"},{"size":1343,"mtime":1651843487409,"results":"51","hashOfConfig":"30"},{"size":1067,"mtime":1651843487415,"results":"52","hashOfConfig":"30"},{"size":586,"mtime":1651843487414,"results":"53","hashOfConfig":"30"},{"size":996,"mtime":1651843487412,"results":"54","hashOfConfig":"30"},{"size":1938,"mtime":1651843487412,"results":"55","hashOfConfig":"30"},{"size":238,"mtime":1651843487421,"results":"56","hashOfConfig":"30"},{"size":6494,"mtime":1651950523834,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"q2yeyw",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\index.js",[],["124","125"],"D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\reportWebVitals.js",[],"D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\App.js",[],"D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\services\\httpService.js",["126"],"import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\naxios.defaults.headers.common[\"x-auth-token\"] = localStorage.getItem(\"token\");\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    toast(\"An unexpected error occured!\");\r\n  }\r\n  console.log(error);\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n};\r\n","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\diabetes.js",["127"],"import './Glass.css'\r\nimport { useState } from 'react'\r\nimport axios from 'axios'\r\nimport Diabeties from \"D:/User_Data/Documents/FemAidMaxAgain/FEM-AID/client/src/Assets/Diabeties1.jpg\"\r\n\r\n//var axios = require('axios');\r\n//var FormData = require('form-data');\r\nvar data = new FormData();\r\n\r\nfunction Glass() {\r\n  const [Pregnancies, setPregnancies] = useState('')\r\n  const [Glucose, setGlucose] = useState('')\r\n  const [BloodPressure, setBloodPressure] = useState('')\r\n  const [SkinThickness, setSkinThickness] = useState('')\r\n  const [Insulin, setInsulin] = useState('')\r\n  const [BMI, setBMI] = useState('')\r\n  const [DiabetesPedigreeFunction, setDiabetesPedigreeFunction] = useState('')\r\n  const [Age, setAge] = useState('')\r\n  const [predicted, setPredicted] = useState(false)\r\n  const [diabetes, setDiabetes] = useState('')\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    data.append('Pregnancies', Pregnancies);\r\n    data.append('Glucose', Glucose);\r\n    data.append('BloodPressure', BloodPressure);\r\n    data.append('SkinThickness', SkinThickness);\r\n    data.append('Insulin', Insulin);\r\n    data.append('BMI', BMI);\r\n    data.append('DiabetesPedigreeFunction', DiabetesPedigreeFunction);\r\n    data.append('Age', Age);\r\n    //console.log(Pregnancies.toString());\r\n    //const params = { Pregnancies, Glucose, BloodPressure, SkinThickness, Insulin, BMI, DiabetesPedigreeFunction, Age }\r\n    //const params = { 0, 120, 120, 20, 80, 33, 0.7, 44 }\r\n    \r\n    var config = {\r\n      method: 'post',\r\n      url: 'https://cors-anywhere.herokuapp.com/https://fem-aid-diabetes.herokuapp.com/predict',\r\n      headers: { \r\n        'content-type': 'string'\r\n      },\r\n      data : data\r\n    };\r\n    \r\n    axios(config)\r\n    .then(function (response) {\r\n      console.log(response.data.diabetes);\r\n      if (response.data.diabetes === '1'){\r\n        setDiabetes('Yes')\r\n      }else{\r\n        setDiabetes('No')\r\n      }\r\n      setPredicted(true);\r\n      console.log(predicted)\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n    \r\n  }\r\n\r\n  const reset = () => {\r\n    setPregnancies('')\r\n    setGlucose('')\r\n    setBloodPressure('')\r\n    setSkinThickness('')\r\n    setInsulin('')\r\n    setBMI('')\r\n    setDiabetesPedigreeFunction('')\r\n    setAge('')\r\n  }\r\n\r\n  return (\r\n    <div className='text'>\r\n    <div className = \"row\">\r\n    {(predicted) ? ((diabetes ==='Yes')? (\r\n      <div className = \"column\">{diabetes}</div>)\r\n      :(<div className = \"column\">{diabetes}</div>)): (\r\n    <div className = \"column\">\r\n      <div className='image'>\r\n      <img src={Diabeties} className=\"exp__image\" alt=\"\" />\r\n      </div>\r\n      \r\n      <b>Pregnancies:</b> No. of pregnancies you've had (if any)<br></br><br></br>\r\n      <b>Glucose:</b> Your blood sugar level in mg/dL<br></br><br></br>\r\n      <b>Blood Pressure:</b> Enter your diastolic blood pressure.<br></br><br></br>\r\n      For example: in 132/88 mmHg , 88 is the diastolic blood pressure<br></br><br></br>\r\n      <b>Skin Thickness: </b>Triceps skin fold thickness in mm<br></br><br></br>\r\n      <b>Insulin:</b> Your insulin level in pmol/L<br></br><br></br>\r\n      <b>BMI:</b> Click here to calculate your body mass index<br></br><br></br>\r\n      <b>Diabetes Pedigree Function:</b><br></br><br></br>\r\n      <b>Age: </b>Enter your age\r\n    </div>\r\n    \r\n    )}\r\n    <div className=\"glass column\">\r\n      <form onSubmit={(e) => handleSubmit(e)} className=\"glass__form\">\r\n        <h2>Diabetes</h2>\r\n        <div className=\"glass__form__group\">\r\n          <label>Number of Pregnancies</label><br/>\r\n          <input\r\n            id=\"Pregnancies\"\r\n            className=\"glass__form__input\"\r\n            //placeholder=\"Pregnancies\"\r\n            //required\r\n            type=\"number\"\r\n            value={Pregnancies}\r\n            onChange={(e) => setPregnancies(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"glass__form__group\">\r\n          <label>Glucose</label><br/>\r\n          <input\r\n            id=\"Glucose\"\r\n            className=\"glass__form__input\"\r\n            //placeholder=\"Glucose\"\r\n            //required\r\n            type=\"number\"\r\n            value={Glucose}\r\n            onChange={(e) => setGlucose(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"glass__form__group\">\r\n          <label>Blood Pressure</label><br/>\r\n          <input\r\n            id=\"BloodPressure\"\r\n            className=\"glass__form__input\"\r\n            //placeholder=\"BloodPressure\"\r\n            //required\r\n            type=\"number\"\r\n            value={BloodPressure}\r\n            onChange={(e) => setBloodPressure(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"glass__form__group\">\r\n          <label>Skin Thickness</label><br/>\r\n          <input\r\n            id=\"SkinThickness\"\r\n            className=\"glass__form__input\"\r\n            //placeholder=\"SkinThickness\"\r\n            //required\r\n            type=\"number\"\r\n            value={SkinThickness}\r\n            onChange={(e) => setSkinThickness(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"glass__form__group\">\r\n          <label>Insulin</label><br/>\r\n          <input\r\n            id=\"Insulin\"\r\n            className=\"glass__form__input\"\r\n            //placeholder=\"Insulin\"\r\n            //required\r\n            type=\"number\"\r\n            value={Insulin}\r\n            onChange={(e) => setInsulin(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"glass__form__group\">\r\n          <label>BMI</label><br/>\r\n          <input\r\n            id=\"BMI\"\r\n            className=\"glass__form__input\"\r\n            //placeholder=\"BMI\"\r\n            //required\r\n            type=\"number\"\r\n            value={BMI}\r\n            onChange={(e) => setBMI(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"glass__form__group\">\r\n          <label>Diabetes Pedigree Function</label><br/>\r\n          <input\r\n            id=\"DiabetesPedigreeFunction\"\r\n            className=\"glass__form__input\"\r\n            //placeholder=\"DiabetesPedigreeFunction\"\r\n            //required\r\n            type=\"number\"\r\n            value={DiabetesPedigreeFunction}\r\n            onChange={(e) => setDiabetesPedigreeFunction(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"glass__form__group\">\r\n          <label>Age</label><br/>\r\n          <input\r\n            id=\"Age\"\r\n            className=\"glass__form__input\"\r\n            //placeholder=\"Age\"\r\n            //required\r\n            type=\"number\"\r\n            value={Age}\r\n            onChange={(e) => setAge(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"glass__form__group\">\r\n          <button type=\"submit\" className=\"glass__form__btn\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Glass","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\createpost.jsx",[],"D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\not-found.jsx",[],"D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\log.jsx",["128"],"import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Joi from \"joi-browser\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"../App.css\";\r\nimport Input from \"../components/common/input\";\r\nimport Form from \"./common/form\";\r\nimport { login } from \"../services/authService\";\r\n\r\n// use programmatic navigation form login form to dashboard\r\n\r\n// add functionality to show react toast if the user is redierected to different locations due to history\r\nclass Log extends Form {\r\n  state = {\r\n    data: { email: \"\", password: \"\" },\r\n    errors: {\r\n      email: \"\",\r\n      passowrd: \"\",\r\n    },\r\n  };\r\n  schema = {\r\n    email: Joi.string().required().label(\"Email ID\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n  doSubmit = async () => {\r\n    // call the server;\r\n    try {\r\n      const { data } = this.state;\r\n      //console.log(data.email);\r\n      const { data: jwt } = await login(data.email, data.password);\r\n      localStorage.setItem(\"token\", jwt);\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/users/login\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        toast.error(\"Invalid Email Or Password\");\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    if (localStorage.getItem(\"token\")) {\r\n      return <Redirect to=\"/dashboard\" />;\r\n    }\r\n    const { data, errors } = this.state;\r\n    return (\r\n      // <section class=\"\">\r\n        <div class=\"px-4 py-5 px-md-5 text-center text-lg-start\" style={{backgroundColor: \"hsl(0, 0%, 96%)\", height: '730px'}}>\r\n          <div class=\"container\">\r\n            <div class=\"row gx-lg-5 align-items-center\">\r\n              <div class=\"col-lg-6 mb-5 mb-lg-0\">\r\n                <h1 class=\"my-5 display-3 fw-bold ls-tight\">\r\n                  Join our community of <br />\r\n                  <span class=\"text-primary\">female <br /> healthcare</span>\r\n                </h1>\r\n                <p style={{color: \"hsl(217, 10%, 50.8%)\"}}>\r\n                  Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                  Eveniet, itaque accusantium odio, soluta, corrupti aliquam\r\n                  quibusdam tempora at cupiditate quis eum maiores libero\r\n                  veritatis? Dicta facilis sint aliquid ipsum atque?\r\n                </p>\r\n              </div>\r\n\r\n              <div class=\"col-lg-6 mb-5 mb-lg-0\">\r\n                <div class=\"card\">\r\n                  <div class=\"card-body py-5 px-md-5\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                      \r\n                      <div class=\"form-outline mb-4\">\r\n                        <Input id=\"form3Example1\" class=\"form-control\"\r\n                          name=\"email\"\r\n                          value={data.email}\r\n                          label=\"Email ID\"\r\n                          onChange={this.handleChange}\r\n                          error={errors.email} />\r\n                      </div>\r\n\r\n                      <div class=\"form-outline mb-4\">\r\n                        <Input id=\"form3Example2\" class=\"form-control\"\r\n                        name=\"password\"\r\n                        value={data.password}\r\n                        label=\"Password\"\r\n                        onChange={this.handleChange}\r\n                        error={errors.password}\r\n                        type=\"password\"/>\r\n                      </div>\r\n\r\n                      <div className=\"text-center\">\r\n                        <button\r\n                          className=\"btn btn-primary m-3\"\r\n                          disabled={this.validate()}\r\n                        >\r\n                        Login\r\n                        </button>\r\n                      </div>\r\n\r\n                    </form>\r\n                  \r\n                  <div className=\"container col-lg-3 col-md-6 border rounder mt-1 p-3 text-center\" style={{maxWidth: '100%'}}>\r\n                    New User? <Link to=\"/users/register\">Register Here</Link>\r\n                  </div>\r\n                    \r\n                </div>\r\n               </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      //</section>    \r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Log;\r\n","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\dashboard.jsx",[],"D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\navbar.jsx",[],"D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\register.jsx",[],"D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\PostPage.jsx",["129","130"],"import React, { Component } from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport \"moment-timezone\";\r\nimport { PersonCircle, HandThumbsUpFill } from \"react-bootstrap-icons\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport http from \"../services/httpService\";\r\nimport { postEndPoint, repliesEndPoint } from \"../config.json\";\r\nimport PostReply from \"./createReply\";\r\n\r\nclass PostPage extends Component {\r\n  state = {\r\n    post: {\r\n      description: \"\",\r\n      title: \"\",\r\n      tags: [],\r\n      author: [],\r\n      upvotes: [],\r\n      views: 0,\r\n    },\r\n    replies: [],\r\n  };\r\n  async componentDidMount() {\r\n    const id = this.props.match.params.id;\r\n    const { data: post } = await http.get(postEndPoint + \"/\" + id);\r\n    const { data: replies } = await http.get(repliesEndPoint + \"/\" + id);\r\n    this.setState({ post: post, replies: replies });\r\n  }\r\n  checkLike() {\r\n    const { user } = this.props;\r\n    const { post } = this.state;\r\n    //console.log(user);\r\n    if (user && post.upvotes && post.upvotes.includes(user._id)) return true;\r\n    else return false;\r\n  }\r\n  checkReplyLike(id) {\r\n    const { replies } = this.state;\r\n    const { user } = this.props;\r\n    if (user) {\r\n      for (let i in replies) {\r\n        if (replies[i]._id === id) {\r\n          if (replies[i].upvotes.includes(user._id)) return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  handleUpvote = async () => {\r\n    try {\r\n      const { data: post } = await http.put(\r\n        postEndPoint + \"like/\" + this.props.match.params.id,\r\n        {}\r\n      );\r\n      console.log(post);\r\n      this.setState({ post: post[0] });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        toast.error(\"You can't upvote your own post!\");\r\n      }\r\n    }\r\n  };\r\n  handleReplyUpvote = async (id) => {\r\n    try {\r\n      const replies_old = [...this.state.replies];\r\n      const reply_updated = await http.put(repliesEndPoint + \"like/\" + id, {});\r\n      const { data: replies } = await http.get(\r\n        repliesEndPoint + \"/\" + this.props.match.params.id\r\n      );\r\n      console.log(replies);\r\n      this.setState({ replies: replies });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        toast.error(\"You can't upvote your own reply!\");\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    const { post, replies } = this.state;\r\n    const { user } = this.props;\r\n    return (\r\n      <div>\r\n        <ToastContainer />\r\n        <div className=\"container col-lg-6 shadow-lg p-3 mt-5 bg-body rounded\">\r\n          <h2>{post.title}</h2>\r\n          <p className=\"mt-4\" style={{ color: \"#505050\" }}>\r\n            {post.description}\r\n          </p>\r\n          <div className=\"mt-1\">\r\n            Related Topics:\r\n            {post.tags &&\r\n              post.tags.map((tag) => (\r\n                <span className=\"badge badge-success m-1 p-2\">{tag.name}</span>\r\n              ))}\r\n            <div className=\"d-flex w-100 justify-content-between mt-3 mb-3\">\r\n              <button\r\n                disabled={!user}\r\n                className={\r\n                  this.checkLike()\r\n                    ? \"btn btn-primary\"\r\n                    : \"btn btn-outline-primary\"\r\n                }\r\n                onClick={this.handleUpvote}\r\n              >\r\n                <HandThumbsUpFill className=\"mr-2\" />\r\n                {(post.upvotes && post.upvotes.length) || 0}\r\n              </button>\r\n              <p>{post.views} Views</p>\r\n            </div>\r\n            <div\r\n              class=\"d-flex w-100 justify-content-between\"\r\n              style={{ color: \"#505050\" }}\r\n            >\r\n              <div>\r\n                <PersonCircle size={30} className=\"mr-2\" />\r\n                Posted by {(post.author && post.author.username) || 0}\r\n              </div>\r\n              <p class=\"mb-1\">\r\n                <Moment fromNow>{post.time}</Moment>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {user && <PostReply id={this.props.match.params.id} />}\r\n        <div className=\"container col-lg-6 shadow-lg p-3 mt-5 bg-body rounded\">\r\n          Showing {replies.length} replies\r\n        </div>\r\n        <div>\r\n          {replies &&\r\n            replies.map((reply) => (\r\n              <div className=\"container col-lg-6 shadow-lg p-3 mt-3 bg-body rounded\">\r\n                <div className=\"ml-4\">\r\n                  <PersonCircle size={30} className=\"mr-3\" />\r\n                  Posted by {reply.author.username}\r\n                </div>\r\n                <div className=\"m-4\">{reply.comment}</div>\r\n                <div className=\"d-flex w-100 justify-content-between mt-3 mb-3\">\r\n                  <button\r\n                    className={\r\n                      this.checkReplyLike(reply._id)\r\n                        ? \"btn btn-primary\"\r\n                        : \"btn btn-outline-primary\"\r\n                    }\r\n                    disabled={!user}\r\n                    onClick={() => {\r\n                      this.handleReplyUpvote(reply._id);\r\n                    }}\r\n                  >\r\n                    <HandThumbsUpFill className=\"mr-2\" />\r\n                    {reply.upvotes.length}\r\n                  </button>\r\n                  <p class=\"mb-1\">\r\n                    <Moment fromNow style={{ color: \"#505050\" }}>\r\n                      {reply.time}\r\n                    </Moment>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostPage;\r\n","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\logout.jsx",["131"],"import React, { Component } from \"react\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    localStorage.removeItem(\"token\");\r\n    window.location = \"/dashboard\";\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\diabetesForm.jsx",["132"],"import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport Input from \"./common/input\";\r\nimport Form from \"./common/form\";\r\nimport http from \"../services/httpService\";\r\nimport { tagsEndPoint } from \"../config.json\";\r\nimport { createpost } from \"../services/postCreateService\";\r\n\r\nclass DiabetesForm extends Form {\r\n  state = {\r\n    data: { Pregnancies: \"\", Glucose: \"\", BloodPressure: \"\" },\r\n    errors: { title: \"\", description: \"\", tags: [] },\r\n    tags: [],\r\n  };\r\n  schema = {\r\n    title: Joi.string().required().min(5).label(\"Title\"),\r\n    description: Joi.string().required().min(3).label(\"Description\"),\r\n    tags: Joi.array(),\r\n  };\r\n  handleTagChange = (tagID) => {\r\n    console.log(\"hello\");\r\n    let data = this.state.data;\r\n    const newtags = data.tags;\r\n    const index = newtags.indexOf(tagID);\r\n    if (index === -1) newtags.push(tagID);\r\n    else newtags.splice(index, 1);\r\n    data = {\r\n      title: data.title,\r\n      description: data.description,\r\n      tags: newtags,\r\n    };\r\n    console.log(data);\r\n    this.setState({ data });\r\n  };\r\n  async componentDidMount() {\r\n    let tags = await http.get(tagsEndPoint);\r\n    try {\r\n      this.setState({ tags: tags.data });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        toast.error(\"Post Validation Failed!\");\r\n      }\r\n    }\r\n  }\r\n  doSubmit = async () => {\r\n    try {\r\n      const { data } = this.state;\r\n      console.log(data);\r\n      const { response } = await createpost(data);\r\n      console.log(response);\r\n      window.location = \"/dashboard\";\r\n    } catch (ex) {console.log(ex)}\r\n  };\r\n  render() {\r\n    const { data, errors, tags } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <ToastContainer />\r\n        <div className=\"container-lg\">\r\n          <h1 className=\"text-center m-2\">Diabetes Prediction</h1>\r\n          <div\r\n            className=\"container m-4 p-4 rounded\"\r\n            style={{ backgroundColor: \"#F1F1F1\" }}\r\n          >\r\n            <form onSubmit={this.handleSubmit}>\r\n              <Input\r\n                value={data.Pregnancies}\r\n                onChange={this.handleChange}\r\n                label=\"Number of Pregnancies\"\r\n                name=\"pregnancies\"\r\n                type=\"text\"\r\n                error={errors.title}\r\n              />\r\n              <div className=\"form-group\">\r\n                <Input\r\n                  value={data.Glucose}\r\n                  onChange={this.handleChange}\r\n                  label=\"Glucose\"\r\n                  name=\"glucose\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                />\r\n                {errors.description && (\r\n                  <div className=\"alert-info\">{errors.description}</div>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"tags\">Related Tags</label>\r\n                <br />\r\n                {errors.tags && <div className=\"alert-info\">{errors.tags}</div>}\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-primary mt-4\"\r\n                  disabled={this.validate()}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DiabetesForm;\r\n","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\common\\protectedRoute.jsx",[],"D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\common\\jumbotron.jsx",[],"D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\services\\authService.js",[],"D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\services\\postCreateService.js",[],"D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\services\\userService.js",[],"D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\utils\\paginate.js",[],"D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\common\\input.jsx",[],"D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\common\\form.jsx",[],"D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\posts.jsx",[],"D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\listgroup.jsx",[],"D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\common\\pagination.jsx",["133"],"import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = (props) => {\r\n  const { itemCount, pageSize, currentPage, onPageChange } = props;\r\n  const pagesCount = Math.ceil(itemCount / pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n  return (\r\n    <div className=\"text-center\">\r\n      <ul className=\"pagination m-4\">\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemCount: propTypes.number.isRequired,\r\n  pageSize: propTypes.number.isRequired,\r\n  currentPage: propTypes.number.isRequired,\r\n  onPageChange: propTypes.func.isRequired,\r\n};\r\nexport default Pagination;\r\n","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\createReply.jsx",["134","135","136","137","138"],"import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport { Toast, ToastContainer } from \"react-toastify\";\r\nimport Form from \"./common/form\";\r\nimport { createreply } from \"../services/replyCreateService\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass PostReply extends Form {\r\n  state = {\r\n    data: {\r\n      comment: \"\",\r\n    },\r\n    errors: { comment: \"\" },\r\n  };\r\n  schema = {\r\n    comment: Joi.string().required().min(5).label(\"Comment\"),\r\n  };\r\n  doSubmit = async () => {\r\n    try {\r\n      const { data } = this.state;\r\n      const { data: reply } = await createreply(data, this.props.id);\r\n      window.location = `/post/${this.props.id}`;\r\n    } catch (ex) {}\r\n  };\r\n  render() {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <ToastContainer />\r\n        <div className=\"container col-lg-6 shadow-lg p-3 mt-5 bg-body rounded\">\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Post Reply</label>\r\n              <textarea\r\n                className=\"border border-primary\"\r\n                style={{ height: 150 }}\r\n                value={data.comment}\r\n                onChange={this.handleChange}\r\n                name=\"comment\"\r\n                type=\"comment\"\r\n                id=\"comment\"\r\n                className=\"form-control\"\r\n              />\r\n              {errors.description && (\r\n                <div className=\"alert-info\">{errors.description}</div>\r\n              )}\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-primary mt-4\"\r\n                  disabled={this.validate()}\r\n                >\r\n                  Post Reply\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostReply;\r\n","D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\services\\replyCreateService.js",[],["139","140"],"D:\\User_Data\\Documents\\FemAidMaxAgain\\FEM-AID\\client\\src\\components\\DiseaseDetection.js",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":20,"column":1,"nodeType":"147","endLine":25,"endColumn":3},{"ruleId":"148","severity":1,"message":"149","line":62,"column":9,"nodeType":"150","messageId":"151","endLine":62,"endColumn":14},{"ruleId":"148","severity":1,"message":"152","line":4,"column":10,"nodeType":"150","messageId":"151","endLine":4,"endColumn":24},{"ruleId":"148","severity":1,"message":"153","line":63,"column":13,"nodeType":"150","messageId":"151","endLine":63,"endColumn":24},{"ruleId":"148","severity":1,"message":"154","line":64,"column":13,"nodeType":"150","messageId":"151","endLine":64,"endColumn":26},{"ruleId":"148","severity":1,"message":"155","line":1,"column":8,"nodeType":"150","messageId":"151","endLine":1,"endColumn":13},{"ruleId":"148","severity":1,"message":"156","line":56,"column":27,"nodeType":"150","messageId":"151","endLine":56,"endColumn":31},{"ruleId":"157","severity":1,"message":"158","line":18,"column":13,"nodeType":"159","endLine":18,"endColumn":73},{"ruleId":"148","severity":1,"message":"160","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":26},{"ruleId":"148","severity":1,"message":"161","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":15},{"ruleId":"148","severity":1,"message":"162","line":6,"column":10,"nodeType":"150","messageId":"151","endLine":6,"endColumn":18},{"ruleId":"148","severity":1,"message":"163","line":21,"column":21,"nodeType":"150","messageId":"151","endLine":21,"endColumn":26},{"ruleId":"164","severity":1,"message":"165","line":42,"column":17,"nodeType":"166","endLine":42,"endColumn":41},{"ruleId":"141","replacedBy":"167"},{"ruleId":"143","replacedBy":"168"},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'reset' is assigned a value but never used.","Identifier","unusedVar","'ToastContainer' is defined but never used.","'replies_old' is assigned a value but never used.","'reply_updated' is assigned a value but never used.","'React' is defined but never used.","'tags' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Component' is defined but never used.","'Toast' is defined but never used.","'Redirect' is defined but never used.","'reply' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["169"],["170"],"no-global-assign","no-unsafe-negation"]